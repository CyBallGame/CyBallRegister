{"version":3,"sources":["utils/web3React.js","config/constant.js","hooks/useAuth.js","utils/getRpcUrl.js","utils/web3.js","utils/useWeb3.js","LoaderIcon.js","App.js","index.js"],"names":["ConnectorNames","injected","InjectedConnector","supportedChainIds","connectorsByName","EMAIL_REGEX","useAuth","useWeb3React","activate","deactivate","chainId","logout","useCallback","window","localStorage","getItem","walletconnect","close","walletConnectProvider","login","connectorID","connector","error","a","UnsupportedChainIdError","toast","hideProgressBar","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestError","message","RPC_URL","56","88","89","97","getNodeUrl","getWeb3NoAccount","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3BasedOnChainId","useWeb3","library","refEth","useRef","useState","web3","setweb3","useEffect","current","spinning","keyframes","Wrapper","styled","div","LoaderIcon","LoginWrapper","TextHeader","LoginButton","LoginModal","InputWrapper","Input","input","ErrorText","InfoText","img","connectors","title","connectorId","App","isLoading","setIsLoading","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","account","onHandleLogin","test","eth","personal","sign","signedData","axios","post","address","data","success","messageCode","response","code","className","CSSTransition","in","unmountOnExit","classNames","placeholder","value","onChange","e","target","type","addressArr","split","slice","join","formatAddress","disabled","onClick","ReactDOM","render","StrictMode","getLibrary","provider","document","getElementById"],"mappings":"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","file":"static/js/main.ebd2a468.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\n\nexport const ConnectorNames = {\n  Injected: 'injected',\n}\nconst chainIds = [97]\nexport const injected = new InjectedConnector({ supportedChainIds: chainIds })\n\nexport const connectorsByName = {\n  [ConnectorNames.Injected]: injected,\n}\n\nexport const getLibrary = (provider) => provider\n","export const API_CYBALL = 'https://cyball-api.azurewebsites.net/api/SignUp?code=k1YhIgZuJq4kEcc6y/N2B/X9yHj2k11XRNwYoeTc8C3ab369NblO5w=='\nexport const EMAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n","/* eslint-disable no-else-return */\nimport { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { toast } from 'react-toastify'\nimport { NoBscProviderError, UserRejectedRequestError } from '@binance-chain/bsc-connector'\nimport {\n  InjectedConnector,\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport { connectorsByName } from 'utils/web3React'\n\nconst useAuth = () => {\n  const { activate, deactivate, chainId } = useWeb3React()\n\n  const logout = useCallback(() => {\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, chainId])\n\n  const login = useCallback((connectorID) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          toast.error('Unsupported chainid', {\n            hideProgressBar: true,\n          })\n        } else if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n          toast.error('No Binance Wallet', {\n            hideProgressBar: true,\n          })\n        } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestError) {\n          toast.error('Please authorize to access your account', {\n            hideProgressBar: true,\n          })\n        } else {\n          toast.error(error.message, {\n            hideProgressBar: true,\n          })\n        }\n      })\n    } else {\n      toast.error('Unable to find connector', {\n        hideProgressBar: true,\n      })\n    }\n  }, [])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","export const RPC_URL = {\n  56: 'https://solitary-snowy-river.bsc.quiknode.pro/16b4e8d1466a4e5c06c88145a2faed83b3661fd9/',\n  88: 'https://rpc.tomochain.com',\n  89: 'https://testnet.tomochain.com',\n  97: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n}\n\nconst getNodeUrl = (chainId) => (RPC_URL[chainId] ? RPC_URL[chainId] : RPC_URL[88])\n\nexport default getNodeUrl\n","import Web3 from 'web3'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst getWeb3BasedOnChainId = (chainId) => {\n  const RPC_URL = getRpcUrl(chainId)\n  const httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 })\n  const web3 = new Web3(httpProvider)\n\n  return web3\n}\n\nconst getWeb3NoAccount = () => getWeb3BasedOnChainId()\n\nexport { getWeb3NoAccount, getWeb3BasedOnChainId }\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst spinning = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(360deg);\n}\n`\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 45px;\n  height: 45px;\n  & > div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    margin: 8px;\n    border: 4px solid #fff;\n    border-radius: 50%;\n    animation: ${spinning} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #fff transparent transparent transparent;\n  }\n  & {\n    div:nth-child(1) {\n      animation-delay: -0.45s;\n    }\n\n    div:nth-child(2) {\n      animation-delay: -0.3s;\n    }\n\n    div:nth-child(3) {\n      animation-delay: -0.15s;\n    }\n  }\n`\n\nconst LoaderIcon = () => {\n  return (\n    <Wrapper>\n      <div />\n      <div />\n      <div />\n      <div />\n    </Wrapper>\n  )\n}\n\nexport default LoaderIcon\n","import { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { CSSTransition } from 'react-transition-group'\nimport { toast } from 'react-toastify'\nimport axios from 'axios'\nimport { API_CYBALL, EMAIL_REGEX } from 'config/constant'\nimport useAuth from 'hooks/useAuth'\nimport { ConnectorNames } from 'utils/web3React'\nimport useWeb3 from 'utils/useWeb3'\nimport { useState } from 'react'\nimport LoaderIcon from 'LoaderIcon'\n\nconst LoginWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  background-image: url('/images/background_countdown.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  height: 100vh;\n`\nconst TextHeader = styled.div`\n  font-size: 2.4rem;\n  color: #fefefe;\n  font-weight: 600;\n  margin-bottom: 32px;\n`\n\nconst LoginButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  background-image: url('/images/login-button-background.png');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  width: 280px;\n  transition: background-image 0.3s ease-in, transform 0.1s ease-in;\n  padding: 15px 10px;\n  border-radius: 2px;\n\n  &:not(:last-of-type) {\n    margin-bottom: 20px;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-image: url('/images/login-button-background-hover.png');\n  }\n\n  &:active {\n    transform: translateY(-2px);\n    opacity: 80%;\n  }\n\n  & > div {\n    font-size: 1.6rem;\n    color: #fefefe;\n    font-weight: 700;\n  }\n`\n\nconst LoginModal = styled.div`\n  margin: 0 auto;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url('/images/login-modal.png');\n  background-repeat: no-repeat;\n  background-size: contain;\n  justify-content: center;\n  background-position: center;\n  padding: 0px 100px;\n  height: 450px;\n  width: 400px;\n\n  @media (max-width: 576px) {\n    width: 300px;\n    height: 500px;\n    padding: 0px;\n  }\n`\n\nconst InputWrapper = styled.div`\n  width: 300px;\n  height: 40px;\n  margin-bottom: 5px;\n  position: relative;\n  clip-path: polygon(16px 0, 100% 0, 100% calc(100% - 19px), calc(100% - 6px) 100%, 0% 100%, 0 19px);\n  background: linear-gradient(180deg, #b596dc 0%, #3d296a 15px) #22144a;\n`\n\nconst Input = styled.input`\n  font-size: 1.6rem;\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 100%;\n  height: calc(100% - 4px);\n  font-weight: 500;\n  padding: 0px 15px;\n  color: #e0e0e0;\n  font-family: 'Orbitron', sans-serif;\n  border: none;\n  background: #22144a;\n  clip-path: polygon(15px 0, 100% 0, calc(100% - 6px) 100%, 0% 100%, 0 18px);\n`\nconst ErrorText = styled.div`\n  font-size: 0.8rem;\n  color: red;\n  width: 300px;\n  bottom: 2px;\n`\n\nconst AccountWrapper = styled.div`\n  position: relative;\n  display: flex;\n  width: 300px;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n`\nconst AccountText = styled.div`\n  position: absolute;\n  font-weight: 500;\n  font-size: 1.7rem;\n  color: #e0e0e0;\n  letter-spacing: 2px;\n`\n\nconst FrameImage = styled.img`\n  width: 300px;\n`\nconst InfoText = styled.div`\n  font-size: 1rem;\n  color: red;\n  text-align: center;\n`\n\nconst connectors = [\n  {\n    title: 'Metamask',\n    connectorId: ConnectorNames.Injected,\n  },\n]\n\nfunction App() {\n  const { login } = useAuth()\n  const [isLoading, setIsLoading] = useState(false)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [emailError, setEmailError] = useState(null)\n  const [passwordError, setPasswordError] = useState(null)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n\n  const formatAddress = (address) => {\n    if (address) {\n      const addressArr = address.split('')\n      return `${addressArr.slice(0, 11).join('')}...${addressArr.slice(-11).join('')}`\n    }\n\n    return null\n  }\n\n  const onHandleLogin = async () => {\n    try {\n      if (!email) {\n        setEmailError('Email is required')\n        return\n      }\n\n      if (!EMAIL_REGEX.test(email)) {\n        setEmailError('Invalid email address')\n        return\n      }\n\n      if (!password) {\n        setPasswordError('Password is required')\n        return\n      }\n      setEmailError(null)\n      setPasswordError(null)\n      setIsLoading(true)\n      const message = `${email}-${password}`\n      const signedData = await web3.eth.personal.sign(message, account)\n      const result = await axios.post(API_CYBALL, {\n        email,\n        password,\n        address: account,\n        signedData,\n      })\n\n      if (result.data) {\n        toast.success('Successfully create account', {\n          hideProgressBar: true,\n        })\n      }\n      setIsLoading(false)\n    } catch (error) {\n      const messageCode = error && error.response && error.response.data && error.response.data.code\n\n      if (error.code === 4001) {\n        toast.error(error.message, {\n          hideProgressBar: true,\n        })\n        setIsLoading(false)\n        return\n      }\n\n      if (messageCode === 'invalid_password') {\n        toast.error('Invalid Passowrd', {\n          hideProgressBar: true,\n        })\n        setIsLoading(false)\n        return\n      }\n      toast.error('Fail to sign up', {\n        hideProgressBar: true,\n      })\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <LoginWrapper>\n        <LoginModal>\n          <TextHeader>Create Cyball Account</TextHeader>\n          <CSSTransition in={!!account} timeout={300} unmountOnExit classNames=\"fade\">\n            <>\n              <InputWrapper>\n                <Input\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={(e) => {\n                    if (e) {\n                      setEmail(e.target.value)\n                    }\n                  }}\n                />\n              </InputWrapper>\n              {emailError && <ErrorText>{emailError}</ErrorText>}\n              <br />\n              <InputWrapper>\n                <Input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(e) => {\n                    if (e) {\n                      setPassword(e.target.value)\n                    }\n                  }}\n                />\n              </InputWrapper>\n              {passwordError && <ErrorText>{passwordError}</ErrorText>}\n              <br />\n              <InputWrapper>\n                <Input value={formatAddress(account)} disabled />\n              </InputWrapper>\n            </>\n          </CSSTransition>\n          <br />\n          {!account ? (\n            <LoginButton\n              onClick={() => {\n                login(connectors[0].connectorId)\n              }}\n            >\n              <div>Log in Metamask account</div>\n            </LoginButton>\n          ) : (\n            <LoginButton onClick={onHandleLogin}>{isLoading ? <LoaderIcon /> : <div>Sign up</div>}</LoginButton>\n          )}\n          {account && <InfoText>1 Metamask account can only be linked to 1 Cyball account</InfoText>}\n        </LoginModal>\n      </LoginWrapper>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport ReactDOM from 'react-dom'\nimport { ToastContainer } from 'react-toastify'\nimport { getLibrary } from 'utils/web3React'\nimport './index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n      <ToastContainer />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}